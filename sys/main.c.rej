--- sys/main.c
+++ sys/main.c
@@ -3,7 +3,9 @@
 #include <sys/kprintf.h>
 #include <sys/tarfs.h>
 #include <sys/ahci.h>
-
+#include <sys/idt.h>
+#include <sys/timer.h>
+extern void installIdt();
 #define INITIAL_STACK_SIZE 4096
 uint8_t initial_stack[INITIAL_STACK_SIZE]__attribute__((aligned(16)));
 uint32_t* loader_stack;
@@ -21,14 +23,15 @@ void start(uint32_t *modulep, void *physbase, void *physfree)
       kprintf("Available Physical Memory [%p-%p]\n", smap->base, smap->base + smap->length);
     }
   }
-  kprintf("physfree %p\n", (uint64_t)physfree);
-  kprintf("tarfs in [%p:%p]\n", &_binary_tarfs_start, &_binary_tarfs_end);
+  kprintf("physfree %p\n\r", (uint64_t)physfree);
+  kprintf("tarfs in [%p:%p] \n%d", &_binary_tarfs_start, &_binary_tarfs_end);
+  while(1); //main should not return
 }
 
 void boot(void)
 {
   // note: function changes rsp, local stack variables can't be practically used
-  register char *temp1, *temp2;
+  register char *temp2, *temp1;
 
   for(temp2 = (char*)0xb8001; temp2 < (char*)0xb8000+160*25; temp2 += 2) *temp2 = 7 /* white */;
   __asm__(
